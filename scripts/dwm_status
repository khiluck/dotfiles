#!/bin/bash
# Network speed stuff stolen from http://linuxclues.blogspot.sg/2009/11/shell-script-show-network-speed.html

print_cpu() {
	GETCPU=$(top -b -n1 | grep "Cpu(s)" | awk '{print $2 + $4}' | cut -f1 -d'.')
	printf "CPU:%s%%" "$GETCPU"
}

print_cputemp() {
	GETCPUTEMP=$(cat /sys/class/thermal/thermal_zone2/temp)
	CPUTEMPC=$(echo "$GETCPUTEMP/1000" | bc)
	printf "🌡️%s℃" "$CPUTEMPC"
}

print_layout() {
	case $(setxkbmap -query | grep "layout:" | awk '{print $2}') in
		"us") KBD="En" ;;
		"de") KBD="De" ;;
		"ru") KBD="Ru" ;;
		"ua") KBD="Uk" ;;
	esac

	printf "%s" "$KBD"
}


print_mem(){
#	echo $(($(grep -m1 'MemAvailable:' /proc/meminfo | awk '{print $2}') / 1024))
	FREE_DATA=`free -m | grep Mem`
	CURRENT=`echo $FREE_DATA | cut -f3 -d' '`
	TOTAL=`echo $FREE_DATA | cut -f2 -d' '`
	PRINTMEM=$(echo "scale = 2; $CURRENT/$TOTAL*100" | bc)
	printf "RAM:%s%%" "$PRINTMEM"
}


print_hdd(){
	PRINTHDD=$(df -lh | awk '{if ($6 == "/") { print $5 }}' | head -1 | cut -d'%' -f1)
	printf "🖴 %%"
}


print_temp(){
	PRINTTEMP=$(head -c 2 /sys/devices/platform/thinkpad_hwmon/hwmon/hwmon?/temp1_input)
#	printf "%s" "$PRINTTEMP"
	printf "🌡️%s℃" "$PRINTTEMP"
#	sensors | awk '/temp1/ {print $2}' | cut -c2- | cut -f1 -d'.'
}


print_internet(){
	case "$(cat /sys/class/net/wlan*/operstate 2>/dev/null)" in
		down) wifiicon="❎" ;;
		#up) wifiicon="$(nmcli | grep wlan0 | grep "connected to" | awk '{printf $4}') $(awk '/^\s*w/ { print "📶", int($3 * 100 / 70) "%" }' /proc/net/wireless)" ;;
		up) wifiicon="$(iwctl station wlan0 show | grep "Connected network" | awk '{ print substr ($3, 1, 7) }') $(awk '/^\s*w/ { print "📶", int($3 * 100 / 70) "%" }' /proc/net/wireless)" ;;
	esac

	printf "%s%s%s\n" "$wifiicon" "$(sed "s/down//;s/up/🌐/" /sys/class/net/e*/operstate 2>/dev/null)" "$(sed "s/.*/🔒/" /sys/class/net/wg-client*/operstate 2>/dev/null)"
}


print_battery(){
	for battery in /sys/class/power_supply/BAT?*; do
		# If non-first battery, print a space separator.
		[ -n "${capacity+x}" ] && printf " "
		# Sets up the status and capacity
		case "$(cat "$battery/status")" in
			"Full") status="⚡" ;;
			"Discharging") status="🔋" ;;
			"Charging") status="🔌" ;;
			"Not charging") status="🛑" ;;
			"Unknown") status="♻️" ;;
		esac
		capacity=$(cat "$battery/capacity")
		# Will make a warn variable if discharging and low
		[ "$status" = "🔋" ] && [ "$capacity" -le 25 ] && warn="❗"
		# Suspend if discharching lower then 5
		[ "$status" = "🔋" ] && [ "$capacity" -le 5 ] && systemctl suspend
		# Prints the info
		printf "%s%s%d%%" "$status" "$warn" "$capacity"; unset warn
	done && exit 0

}

print_volume(){
	[ $(pamixer --get-mute) = true ] && echo 🔇 && exit

	vol="$(pamixer --get-volume)"

	if [ "$vol" -gt "70" ]; then
		icon="🔊"
	elif [ "$vol" -lt "30" ]; then
		icon="🔈"
	else
		icon="🔉"
	fi

	printf "%s%s%%" "$icon" "$vol"
}

print_brightness(){
	brlevel="$(echo "scale = 2; $(cat /sys/class/backlight/intel_backlight/brightness)/15" | bc | cut -f1 -d'.')"
#	brlevel=$(xbacklight | cut -f1 -d'.')
	if [ "$brlevel" -gt "50" ]; then
		icon="🔆"
	else
		icon="🔅"
	fi

	printf "%s%s%%" "$icon" "$brlevel"
}



print_date(){
	clock=$(date '+%I')
	case "$clock" in
		"00") icon="🕛" ;;
		"01") icon="🕐" ;;
		"02") icon="🕑" ;;
		"03") icon="🕒" ;;
		"04") icon="🕓" ;;
		"05") icon="🕔" ;;
		"06") icon="🕕" ;;
		"07") icon="🕖" ;;
		"08") icon="🕗" ;;
		"09") icon="🕘" ;;
		"10") icon="🕙" ;;
		"11") icon="🕚" ;;
		"12") icon="🕛" ;;
	esac
	PRINTDATE=$(date "+%a %d-%b|$icon %H:%M ")
	printf "🗓️%s" "$PRINTDATE"
}

print_rec(){
#	[ -f /tmp/screencast ] && printf " ⏺️🎙"
	if [ -f /tmp/screencast ]; then 
		PRINTVPATH="$(cat /tmp/screencast)"
		PRINTVSIZE=$(echo "scale = 1 ; $(stat -c%s $PRINTVPATH) / 1024 / 1000" | bc)
		printf " %sM ⏺️" "$PRINTVSIZE"
	fi
}

print_webcam(){
	[ -f /tmp/webcam ] && printf " 📸"
}

whatismyip(){
    curl -s https://icanhazip.com
}


while true
do
	xsetroot -name "$(print_rec)$(print_webcam) ⌨ $(print_layout)|$(print_volume)|$(print_internet)|$(whatismyip)|$(print_date)"
	sleep 60s
done



