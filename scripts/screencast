#!/bin/bash

FILENAME=$HOME/Videos/screencast-$(date '+%y%m%d-%H%M-%S').mp4

start_screencast(){
	pacmd list-sinks | egrep '^\s+name: .*' | grep combined &> /dev/null || micplusspeakers.sh
	touch /tmp/screencast && sleep 0.5s && refbar
	echo $FILENAME > /tmp/screencast
	ffmpeg -y -f x11grab -thread_queue_size 1024 -framerate 30 -s "$(xdpyinfo | awk '/dimensions/ {print $2;}')" -i "$DISPLAY" -f pulse -thread_queue_size 1024 -i recording.monitor -c:v libx264 -crf 21 -preset veryfast -pix_fmt yuv420p -r 30 -c:a aac -b:a 128k -af "afftdn=nr=8:nf=-30,highpass=f=40,lowpass=f=16000" "$FILENAME" &

	echo $! > /tmp/recordingpid
}


stop_screencast(){
	echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º loopback –∏ –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ (PipeWire/PulseAudio)..."
	# –ò—â–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –º–æ–¥—É–ª–∏ loopback, null-sink –∏ combine-sink
	modules=$(pactl list short modules | grep -E 'module-loopback|module-null-sink|module-combine-sink' | cut -f1)
	if [ -z "$modules" ]; then
	  echo "‚úÖ –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –º–æ–¥—É–ª–µ–π –¥–ª—è –≤—ã–≥—Ä—É–∑–∫–∏."
	else
	  for id in $modules; do
		pactl unload-module "$id" && echo "üßπ –í—ã–≥—Ä—É–∂–µ–Ω –º–æ–¥—É–ª—å ID $id"
	  done
	  echo "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞."
	fi

	rm -f /tmp/screencast && refbar
	recpid="$(cat /tmp/recordingpid)"
    # kill with SIGTERM, allowing finishing touches.
    kill -15 "$recpid"
    rm -f /tmp/recordingpid
    # even after SIGTERM, ffmpeg may still run, so SIGKILL it.
    sleep 3
    kill -9 "$recpid"
#	xrandr -s 1920x1200
	exit
}


loop_refresh(){
	while [ -f /tmp/screencast ]
	do
	  sleep 2 # or less like 0.2
	  refbar
	done
}


[ -f /tmp/screencast ] && stop_screencast 
start_screencast && loop_refresh

