#!/bin/bash

FILENAME=$HOME/Videos/screencast-$(date '+%y%m%d-%H%M-%S').mp4

start_screencast(){
	pacmd list-sinks | egrep '^\s+name: .*' | grep combined &> /dev/null || micplusspeakers.sh
	touch /tmp/screencast && sleep 0.5s && refbar
	echo $FILENAME > /tmp/screencast
	#ffmpeg -y -f x11grab -probesize 17M -thread_queue_size 1024 -framerate 60 -s "$(xdpyinfo | awk '/dimensions/ {print $2;}')" -i "$DISPLAY" -f pulse -thread_queue_size 1024 -i recording.monitor -c:v h264 -crf 0 -preset ultrafast -r 30 -c:a aac "$FILENAME" &
	ffmpeg -y -f x11grab -probesize 17M -thread_queue_size 1024 -framerate 30 -s "$(xdpyinfo | awk '/dimensions/ {print $2;}')" -i "$DISPLAY" -f pulse -thread_queue_size 1024 -i recording.monitor -c:v h264 -crf 0 -preset ultrafast -r 30 -c:a aac -af "asendcmd=0.0 afftdn sn start,asendcmd=0.4 afftdn sn stop,afftdn=nr=20:nf=-40" "$FILENAME" &
	echo $! > /tmp/recordingpid
}


stop_screencast(){
	rm -f /tmp/screencast && refbar
	recpid="$(cat /tmp/recordingpid)"
    # kill with SIGTERM, allowing finishing touches.
    kill -15 "$recpid"
    rm -f /tmp/recordingpid
    # even after SIGTERM, ffmpeg may still run, so SIGKILL it.
    sleep 3
    kill -9 "$recpid"
#	xrandr -s 1920x1200
	exit
}


loop_refresh(){
	while [ -f /tmp/screencast ]
	do
	  sleep 2 # or less like 0.2
	  refbar
	done
}


[ -f /tmp/screencast ] && stop_screencast 
start_screencast && loop_refresh

